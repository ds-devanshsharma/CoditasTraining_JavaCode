2D Array - DS
Given a 2D Array, :
1 1 1 0 0 0
0 1 0 0 0 0
1 1 1 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0
We define an hourglass in to be a subset of values with indices falling in this pattern in 's graphical
representation:
a b c
d
e f g
There are hourglasses in , and an hourglass sum is the sum of an hourglass' values. Calculate the
hourglass sum for every hourglass in , then print the maximum hourglass sum.
-------------------------------------------------------------------------------------------------------------
public static int hourglassSum(List<List<Integer>> arr) {
    // Write your code here
    List<Integer> result = new ArrayList<>();
    for(int i=1 ; i<= 4 ;i++ ){
        for(int j =1 ;j<=4 ;j++){
            result.add(sumProvider(arr, i, j));
        }
    }
    return Collections.max(result);
}
 public static int sumProvider(List<List<Integer>> arr ,int i,int j){
        return ((arr.get(i).get(j))+(arr.get(i-1).get(j))+(arr.get(i+1).get(j))+
        (arr.get(i-1).get(j-1))+(arr.get(i-1).get(j+1))+(arr.get(i+1).get(j-1))+
        (arr.get(i+1).get(j+1)));
    }
}
